<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Settings | <%= settings.name %></title>
    <link rel="icon" type="image/png" href="<%= settings.favicon %>"/>
    
    <!-- Fonts and Icons -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    
    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            darkMode: 'class',
            theme: {
                extend: {
                    fontFamily: {
                        sans: ['Poppins', 'sans-serif'],
                    },
                    colors: {
                        primary: {
                            50: '#fff5f5',
                            100: '#fee2e2',
                            200: '#fecaca',
                            300: '#fca5a5',
                            400: '#f87171',
                            500: '#ef4444',
                            600: '#dc2626',
                            700: '#b91c1c',
                            800: '#991b1b',
                            900: '#7f1d1d',
                            950: '#450a0a',
                        },
                        dark: {
                            base: '#0f0f12',
                            light: '#1a1a21',
                            lighter: '#24242e',
                            card: '#1a1a21'
                        }
                    },
                    animation: {
                        'fade-in': 'fadeIn 0.5s ease-in-out',
                        'pulse-slow': 'pulse 4s cubic-bezier(0.4, 0, 0.6, 1) infinite',
                        'float': 'float 3s ease-in-out infinite',
                    },
                    keyframes: {
                        fadeIn: {
                            '0%': { opacity: '0' },
                            '100%': { opacity: '1' },
                        },
                        float: {
                            '0%, 100%': { transform: 'translateY(0)' },
                            '50%': { transform: 'translateY(-10px)' },
                        }
                    },
                    boxShadow: {
                        'glow': '0 0 15px rgba(99, 102, 241, 0.5)',
                        'card': '0 8px 24px rgba(0, 0, 0, 0.12)',
                    }
                }
            }
        }
    </script>
    
    <style>
        body {
            background-color: #0f0f12;
            color: #f5f5f7;
            font-family: 'Poppins', sans-serif;
        }
        
        /* Custom scrollbar */
        ::-webkit-scrollbar {
            width: 8px;
            height: 8px;
        }
        
        ::-webkit-scrollbar-track {
            background: #1e1e24;
        }
        
        ::-webkit-scrollbar-thumb {
            background: #3a3a43;
            border-radius: 4px;
        }
        
        ::-webkit-scrollbar-thumb:hover {
            background: #4a4a55;
        }
        
        /* Custom styles */
        .sidebar {
            background-color: #161618;
            border-right: 1px solid #2d2d35;
        }
        
        .glass-card {
            background: rgba(26, 26, 33, 0.7);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .menu-item.active {
            background-color: rgba(99, 102, 241, 0.1);
            color: #fff;
        }
        
        .menu-item.active i {
            color: #ef4444;
        }

        .toast {
            position: fixed;
            bottom: 20px;
            right: 20px;
            padding: 12px 24px;
            border-radius: 4px;
            color: white;
            opacity: 0;
            transition: opacity 0.3s ease-in-out;
            z-index: 1000;
        }

        .toast.show {
            opacity: 1;
        }

        .toast.success {
            background-color: #4CAF50;
        }

        .toast.error {
            background-color: #f44336;
        }

        .toast.info {
            background-color: #2196F3;
        }
    </style>
</head>
<body class="min-h-screen">
    <!-- Navbar -->
    <nav class="navbar fixed w-full h-16 z-50 px-4 py-2.5 flex items-center justify-between bg-dark-base/80 backdrop-blur-lg border-b border-gray-800">
        <!-- Left side - Logo and Brand -->
        <div class="flex items-center">
            <a href="/" class="flex items-center group">
                <div class="h-10 w-10 mr-3 rounded-full overflow-hidden transition-all duration-300 group-hover:shadow-glow">
                    <img src="/assets/img/SriyanNodes_Logo.gif" class="h-full w-full object-cover" alt="Sriyan Nodes Logo">
                </div>
                <div class="flex flex-col">
                    <span class="self-center text-xl font-bold text-white">Sriyan Nodes</span>
                    <span class="text-xs text-indigo-300">Premium Game Hosting</span>
                </div>
            </a>
        </div>

        <!-- Center - Search Bar -->
        <div class="hidden md:flex items-center flex-1 max-w-xl mx-8">
            <div class="relative w-full">
                <input type="text" placeholder="Search settings..." class="w-full px-4 py-2 bg-dark-lighter rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-primary-500">
                <button class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-white">
                    <i class="fas fa-search"></i>
                </button>
            </div>
        </div>

        <!-- Right side - User Menu and Notifications -->
        <div class="flex items-center gap-4">
            <!-- Notifications -->
            <div class="relative">
                <button class="p-2 text-gray-400 hover:text-white transition-colors duration-200">
                    <i class="fas fa-bell"></i>
                    <span class="absolute top-0 right-0 w-2 h-2 bg-red-500 rounded-full"></span>
                </button>
            </div>

            <!-- User Profile Dropdown -->
            <div class="relative inline-block">
                <button id="dropdownBtn" class="flex items-center px-4 py-2 text-sm font-medium text-white rounded-lg bg-dark-lighter hover:bg-primary-700 transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-opacity-50">
                    <div class="w-8 h-8 rounded-full bg-primary-500/20 flex items-center justify-center mr-2">
                        <i class="fas fa-user text-primary-400"></i>
                    </div>
                    <span class="mr-2"><%= userinfo?.username || 'User' %></span>
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                    </svg>
                </button>
                <div id="dropdownMenu" class="hidden absolute right-0 mt-2 w-64 bg-dark-lighter rounded-lg shadow-lg overflow-hidden z-50 border border-gray-700">
                    <div class="p-4 border-b border-gray-700">
                        <div class="flex items-center">
                            <div class="w-10 h-10 rounded-full bg-primary-500/20 flex items-center justify-center mr-3">
                                <i class="fas fa-user text-primary-400"></i>
                            </div>
                            <div>
                                <p class="text-sm font-medium text-white"><%= userinfo?.username || 'User' %></p>
                                <p class="text-xs text-gray-400"><%= userinfo?.email || 'email@example.com' %></p>
                            </div>
                        </div>
                    </div>
                    <ul class="py-1 text-sm text-gray-200">
                        <li>
                            <a href="/settings" class="flex items-center px-4 py-2 hover:bg-dark-base hover:text-primary-400 transition-colors duration-200">
                                <i class="fas fa-cog mr-2"></i> Settings
                            </a>
                        </li>
                        <li>
                            <a href="/profile" class="flex items-center px-4 py-2 hover:bg-dark-base hover:text-primary-400 transition-colors duration-200">
                                <i class="fas fa-user-circle mr-2"></i> Profile
                            </a>
                        </li>
                        <% if (userinfo?.isAdmin) { %>
                        <li>
                            <a href="/admin" class="flex items-center px-4 py-2 hover:bg-dark-base hover:text-primary-400 transition-colors duration-200">
                                <i class="fas fa-shield-alt mr-2"></i> Admin Panel
                            </a>
                        </li>
                        <% } %>
                        <li class="border-t border-gray-700 mt-1">
                            <a href="/auth/logout" class="flex items-center px-4 py-2 hover:bg-dark-base text-red-400 hover:text-red-300 transition-colors duration-200">
                                <i class="fas fa-sign-out-alt mr-2"></i> Logout
                            </a>
                        </li>
                    </ul>
                </div>
            </div>

            <!-- Mobile Menu Button -->
            <button id="mobileMenuBtn" class="md:hidden p-2 text-gray-400 hover:text-white transition-colors duration-200">
                <i class="fas fa-bars"></i>
            </button>
        </div>
    </nav>

    <!-- Mobile Search Bar -->
    <div id="mobileSearch" class="md:hidden fixed top-16 left-0 right-0 p-4 bg-dark-base border-b border-gray-800 z-40 hidden">
        <div class="relative">
            <input type="text" placeholder="Search settings..." class="w-full px-4 py-2 bg-dark-lighter rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-primary-500">
            <button class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-white">
                <i class="fas fa-search"></i>
            </button>
        </div>
    </div>

    <div class="flex h-screen pt-16">
        <!-- Sidebar -->
        <aside id="sidebar" class="fixed left-0 top-16 h-full z-10 w-64 transition-transform -translate-x-full sm:translate-x-0">
            <div class="h-full px-3 pb-4 overflow-y-auto sidebar">
                <ul class="space-y-1 pt-4 font-medium">
                    <li>
                        <a href="/dashboard" class="menu-item flex items-center p-3 text-gray-300 rounded-lg hover:text-white">
                            <i class="fas fa-tachometer-alt w-5 h-5 text-gray-400 transition duration-75 group-hover:text-primary-400"></i>
                            <span class="ml-3">Dashboard</span>
                        </a>
                    </li>
                    <li>
                        <a href="/servers" class="menu-item flex items-center p-3 text-gray-300 rounded-lg hover:text-white">
                            <i class="fas fa-server w-5 h-5 text-gray-400 transition duration-75 group-hover:text-primary-400"></i>
                            <span class="ml-3">Servers</span>
                        </a>
                    </li>
                    <li>
                        <a href="/store" class="menu-item flex items-center p-3 text-gray-300 rounded-lg hover:text-white">
                            <i class="fas fa-shopping-cart w-5 h-5 text-gray-400 transition duration-75 group-hover:text-primary-400"></i>
                            <span class="ml-3">Store</span>
                        </a>
                    </li>
                    <li>
                        <a href="/afk" class="menu-item flex items-center p-3 text-gray-300 rounded-lg hover:text-white">
                            <i class="fas fa-coins w-5 h-5 text-gray-400 transition duration-75 group-hover:text-primary-400"></i>
                            <span class="ml-3">AFK Page</span>
                        </a>
                    </li>
                    <li>
                        <a href="/redeem" class="menu-item flex items-center p-3 text-gray-300 rounded-lg hover:text-white">
                            <i class="fas fa-gift w-5 h-5 text-gray-400 transition duration-75 group-hover:text-primary-400"></i>
                            <span class="ml-3">Redeem</span>
                        </a>
                    </li>
                    <li>
                        <a href="/earn" class="menu-item flex items-center p-3 text-gray-300 rounded-lg hover:text-white">
                            <i class="fas fa-gem w-5 h-5 text-gray-400 transition duration-75 group-hover:text-primary-400"></i>
                            <span class="ml-3">Earn</span>
                        </a>
                    </li>
                    <li>
                        <a href="/leaderboard" class="menu-item flex items-center p-3 text-gray-300 rounded-lg hover:text-white">
                            <i class="fas fa-trophy w-5 h-5 text-gray-400 transition duration-75 group-hover:text-primary-400"></i>
                            <span class="ml-3">Leaderboard</span>
                        </a>
                    </li>
                    <li>
                        <a href="/settings" class="menu-item flex items-center p-3 text-white rounded-lg active">
                            <i class="fas fa-cog w-5 h-5 text-primary-400 transition duration-75"></i>
                            <span class="ml-3">Settings</span>
                        </a>
                    </li>
                    <li>
                        <a href="<%= settings.pterodactyl?.domain || '#' %>" target="_blank" class="menu-item flex items-center p-3 text-gray-300 rounded-lg hover:text-white">
                            <i class="fas fa-external-link-alt w-5 h-5 text-gray-400 transition duration-75 group-hover:text-primary-400"></i>
                            <span class="ml-3">Panel</span>
                        </a>
                    </li>
                    <% if (userinfo?.isAdmin) { %>
                    <li class="mt-6 pt-6 border-t border-gray-700">
                        <a href="/admin" class="menu-item flex items-center p-3 text-gray-300 rounded-lg hover:text-white">
                            <i class="fas fa-shield-alt w-5 h-5 text-red-400 transition duration-75 group-hover:text-red-300"></i>
                            <span class="ml-3">Admin Panel</span>
                        </a>
                    </li>
                    <% } %>
                </ul>
            </div>
        </aside>

        <!-- Mobile menu button -->
        <button id="toggleSidebar" type="button" class="fixed bottom-4 right-4 z-20 sm:hidden inline-flex items-center p-3 text-sm font-medium text-white bg-primary-600 rounded-full hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500">
            <i id="sidebarIcon" class="fas fa-bars"></i>
        </button>

        <!-- Main Content -->
        <div class="flex-1 p-6 sm:ml-64">
            <div class="max-w-7xl mx-auto">
                <!-- Page Title -->
                <div class="glass-card rounded-xl p-6 mb-8">
                    <div class="flex flex-col items-center justify-center text-center mb-6">
                        <h1 class="text-3xl font-bold mb-2">Account Settings</h1>
                        <p class="text-gray-400">Manage your account preferences and connections</p>
                    </div>
                </div>

                <!-- Settings Grid -->
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
                    <!-- Profile Settings -->
                    <div class="glass-card rounded-xl p-6">
                        <div class="flex items-center mb-6">
                            <div class="w-12 h-12 rounded-lg bg-primary-500/20 flex items-center justify-center mr-4">
                                <i class="fas fa-user text-primary-400 text-2xl"></i>
                            </div>
                            <div>
                                <h2 class="text-xl font-semibold">Profile Settings</h2>
                                <p class="text-gray-400 text-sm">Manage your account profile</p>
                            </div>
                        </div>

                        <div class="space-y-4">
                            <!-- Username -->
                            <div>
                                <label class="block text-sm font-medium text-gray-300 mb-2">Username</label>
                                <input type="text" id="username" value="<%= userinfo?.username || '' %>" class="w-full px-4 py-2 bg-dark-lighter rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-primary-500">
                            </div>

                            <!-- Email -->
                            <div>
                                <label class="block text-sm font-medium text-gray-300 mb-2">Email Address</label>
                                <input type="email" id="email" value="<%= userinfo?.email || '' %>" class="w-full px-4 py-2 bg-dark-lighter rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-primary-500">
                            </div>

                            <!-- Avatar -->
                            <div>
                                <label class="block text-sm font-medium text-gray-300 mb-2">Profile Picture</label>
                                <div class="flex items-center space-x-4">
                                    <div class="w-20 h-20 rounded-full bg-dark-lighter flex items-center justify-center overflow-hidden">
                                        <% if (userinfo?.discordAvatar) { %>
                                            <img src="https://cdn.discordapp.com/avatars/<%= userinfo.discordId %>/<%= userinfo.discordAvatar %>.png" alt="Profile Picture" class="w-full h-full object-cover">
                                        <% } else { %>
                                            <i class="fas fa-user text-3xl text-gray-400"></i>
                                        <% } %>
                                    </div>
                                    <button onclick="updateProfilePicture()" class="px-4 py-2 bg-dark-lighter hover:bg-dark-base rounded-lg text-sm font-medium text-gray-300 hover:text-white transition-colors duration-200">
                                        Change Picture
                                    </button>
                                </div>
                            </div>

                            <button onclick="updateProfile()" class="w-full px-4 py-2 bg-primary-600 hover:bg-primary-700 text-white rounded-lg text-sm font-medium transition-colors duration-200">
                                Save Changes
                            </button>
                        </div>
                    </div>

                    <!-- Security Settings -->
                    <div class="glass-card rounded-xl p-6">
                        <div class="flex items-center mb-6">
                            <div class="w-12 h-12 rounded-lg bg-red-500/20 flex items-center justify-center mr-4">
                                <i class="fas fa-shield-alt text-red-400 text-2xl"></i>
                            </div>
                            <div>
                                <h2 class="text-xl font-semibold">Security Settings</h2>
                                <p class="text-gray-400 text-sm">Manage your account security</p>
                            </div>
                        </div>

                        <div class="space-y-4">
                            <!-- Current Password -->
                            <div>
                                <label class="block text-sm font-medium text-gray-300 mb-2">Current Password</label>
                                <input type="password" id="currentPassword" class="w-full px-4 py-2 bg-dark-lighter rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-primary-500">
                            </div>

                            <!-- New Password -->
                            <div>
                                <label class="block text-sm font-medium text-gray-300 mb-2">New Password</label>
                                <input type="password" id="newPassword" class="w-full px-4 py-2 bg-dark-lighter rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-primary-500">
                            </div>

                            <!-- Confirm New Password -->
                            <div>
                                <label class="block text-sm font-medium text-gray-300 mb-2">Confirm New Password</label>
                                <input type="password" id="confirmPassword" class="w-full px-4 py-2 bg-dark-lighter rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-primary-500">
                            </div>

                            <button onclick="updatePassword()" class="w-full px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg text-sm font-medium transition-colors duration-200">
                                Update Password
                            </button>

                            <!-- Two-Factor Authentication -->
                            <div class="mt-6 pt-6 border-t border-gray-700">
                                <div class="flex items-center justify-between">
                                    <div>
                                        <h3 class="text-sm font-medium text-gray-300">Two-Factor Authentication</h3>
                                        <p class="text-xs text-gray-400">Add an extra layer of security to your account</p>
                                    </div>
                                    <button class="px-4 py-2 bg-dark-lighter hover:bg-dark-base rounded-lg text-sm font-medium text-gray-300 hover:text-white transition-colors duration-200">
                                        Enable 2FA
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Notification Settings -->
                    <div class="glass-card rounded-xl p-6">
                        <div class="flex items-center mb-6">
                            <div class="w-12 h-12 rounded-lg bg-yellow-500/20 flex items-center justify-center mr-4">
                                <i class="fas fa-bell text-yellow-400 text-2xl"></i>
                            </div>
                            <div>
                                <h2 class="text-xl font-semibold">Notification Settings</h2>
                                <p class="text-gray-400 text-sm">Manage your notification preferences</p>
                            </div>
                        </div>

                        <div class="space-y-4">
                            <!-- Email Notifications -->
                            <div class="flex items-center justify-between">
                                <div>
                                    <h3 class="text-sm font-medium text-gray-300">Email Notifications</h3>
                                    <p class="text-xs text-gray-400">Receive updates via email</p>
                                </div>
                                <label class="relative inline-flex items-center cursor-pointer">
                                    <input type="checkbox" class="sr-only peer" <%= userinfo?.notificationPreferences?.email ? 'checked' : '' %> onchange="updateNotificationPreference('email', this.checked)">
                                    <div class="w-11 h-6 bg-dark-lighter peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-500/20 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary-600"></div>
                                </label>
                            </div>

                            <!-- Discord Notifications -->
                            <div class="flex items-center justify-between">
                                <div>
                                    <h3 class="text-sm font-medium text-gray-300">Discord Notifications</h3>
                                    <p class="text-xs text-gray-400">Receive updates via Discord</p>
                                </div>
                                <label class="relative inline-flex items-center cursor-pointer">
                                    <input type="checkbox" class="sr-only peer" <%= userinfo?.notificationPreferences?.discord ? 'checked' : '' %> onchange="updateNotificationPreference('discord', this.checked)">
                                    <div class="w-11 h-6 bg-dark-lighter peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-500/20 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary-600"></div>
                                </label>
                            </div>

                            <!-- Server Status Updates -->
                            <div class="flex items-center justify-between">
                                <div>
                                    <h3 class="text-sm font-medium text-gray-300">Server Status Updates</h3>
                                    <p class="text-xs text-gray-400">Get notified about server status changes</p>
                                </div>
                                <label class="relative inline-flex items-center cursor-pointer">
                                    <input type="checkbox" class="sr-only peer" <%= userinfo?.notificationPreferences?.serverStatus ? 'checked' : '' %> onchange="updateNotificationPreference('serverStatus', this.checked)">
                                    <div class="w-11 h-6 bg-dark-lighter peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-500/20 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary-600"></div>
                                </label>
                            </div>
                        </div>
                    </div>

                    <!-- Discord Integration -->
                    <div class="glass-card rounded-xl p-6">
                        <div class="flex items-center mb-6">
                            <div class="w-12 h-12 rounded-lg bg-indigo-500/20 flex items-center justify-center mr-4">
                                <i class="fab fa-discord text-indigo-400 text-2xl"></i>
                            </div>
                            <div>
                                <h2 class="text-xl font-semibold">Discord Connection</h2>
                                <p class="text-gray-400 text-sm">Link your Discord account</p>
                            </div>
                        </div>

                        <div class="space-y-4">
                            <!-- Discord Status -->
                            <div class="flex items-center justify-between p-4 rounded-lg bg-dark-lighter">
                                <div class="flex items-center">
                                    <div class="w-3 h-3 rounded-full <%= userinfo?.discordId ? 'bg-green-500' : 'bg-red-500' %> mr-3"></div>
                                    <span class="text-sm font-medium"><%= userinfo?.discordId ? 'Connected' : 'Not Connected' %></span>
                                </div>
                                <% if (!userinfo?.discordId) { %>
                                <a href="/auth/discord" class="px-4 py-2 bg-indigo-600 hover:bg-indigo-700 text-white rounded-lg text-sm font-medium transition-colors duration-200">
                                    Connect Discord
                                </a>
                                <% } else { %>
                                <button onclick="disconnectDiscord()" class="px-4 py-2 bg-red-600 hover:bg-red-700 text-white rounded-lg text-sm font-medium transition-colors duration-200">
                                    Disconnect
                                </button>
                                <% } %>
                            </div>

                            <% if (userinfo?.discordId) { %>
                            <!-- Discord Profile -->
                            <div class="flex items-center p-4 rounded-lg bg-dark-lighter">
                                <img src="https://cdn.discordapp.com/avatars/<%= userinfo.discordId %>/<%= userinfo.discordAvatar %>.png" alt="Discord Avatar" class="w-10 h-10 rounded-full mr-4">
                                <div>
                                    <p class="font-medium"><%= userinfo.discordUsername %></p>
                                    <p class="text-sm text-gray-400">#<%= userinfo.discordDiscriminator %></p>
                                </div>
                            </div>
                            <% } %>

                            <!-- Discord Benefits -->
                            <div class="space-y-2 mt-4">
                                <div class="flex items-center text-sm text-gray-400">
                                    <i class="fas fa-check-circle text-green-400 mr-2"></i>
                                    <span>Receive notifications for server events</span>
                                </div>
                                <div class="flex items-center text-sm text-gray-400">
                                    <i class="fas fa-check-circle text-green-400 mr-2"></i>
                                    <span>Access exclusive Discord features</span>
                                </div>
                                <div class="flex items-center text-sm text-gray-400">
                                    <i class="fas fa-check-circle text-green-400 mr-2"></i>
                                    <span>Sync roles and permissions</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script>
        // Initialize user data
        let userData = JSON.parse('<%- JSON.stringify(userinfo).replace(/'/g, "\\'") %>');

        // Update profile
        async function updateProfile() {
            try {
                const username = document.getElementById('username').value;
                const email = document.getElementById('email').value;

                const response = await fetch('/api/settings/profile', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ username, email })
                });

                const result = await response.json();
                
                if (!result.success) {
                    throw new Error(result.error || 'Failed to update profile');
                }

                userData = result.data;
                showToast('Profile updated successfully', 'success');
            } catch (error) {
                console.error('Error updating profile:', error);
                showToast(error.message || 'Failed to update profile', 'error');
            }
        }

        // Update password
        async function updatePassword() {
            try {
                const currentPassword = document.getElementById('currentPassword').value;
                const newPassword = document.getElementById('newPassword').value;
                const confirmPassword = document.getElementById('confirmPassword').value;

                if (newPassword !== confirmPassword) {
                    throw new Error('New passwords do not match');
                }

                const response = await fetch('/api/settings/password', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ currentPassword, newPassword })
                });

                const result = await response.json();
                
                if (!result.success) {
                    throw new Error(result.error || 'Failed to update password');
                }

                // Clear password fields
                document.getElementById('currentPassword').value = '';
                document.getElementById('newPassword').value = '';
                document.getElementById('confirmPassword').value = '';

                showToast('Password updated successfully', 'success');
            } catch (error) {
                console.error('Error updating password:', error);
                showToast(error.message || 'Failed to update password', 'error');
            }
        }

        // Update notification preferences
        async function updateNotificationPreference(type, enabled) {
            try {
                const notificationPreferences = {
                    ...userData.notificationPreferences,
                    [type]: enabled
                };

                const response = await fetch('/api/settings/notifications', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ notificationPreferences })
                });

                const result = await response.json();
                
                if (!result.success) {
                    throw new Error(result.error || 'Failed to update notification preferences');
                }

                userData = result.data;
                showToast('Notification preferences updated', 'success');
            } catch (error) {
                console.error('Error updating notification preferences:', error);
                showToast(error.message || 'Failed to update notification preferences', 'error');
            }
        }

        // Toggle 2FA
        async function toggle2FA(enabled) {
            try {
                const response = await fetch('/api/settings/2fa', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ enabled })
                });

                const result = await response.json();
                
                if (!result.success) {
                    throw new Error(result.error || 'Failed to toggle 2FA');
                }

                userData = result.data;
                showToast(`2FA ${enabled ? 'enabled' : 'disabled'} successfully`, 'success');
            } catch (error) {
                console.error('Error toggling 2FA:', error);
                showToast(error.message || 'Failed to toggle 2FA', 'error');
            }
        }

        // Toast notification function
        function showToast(message, type = 'info') {
            const toast = document.createElement('div');
            toast.className = `toast ${type}`;
            toast.textContent = message;
            
            document.body.appendChild(toast);
            
            setTimeout(() => {
                toast.classList.add('show');
            }, 100);
            
            setTimeout(() => {
                toast.classList.remove('show');
                setTimeout(() => {
                    document.body.removeChild(toast);
                }, 300);
            }, 3000);
        }

        // Initialize page
        document.addEventListener('DOMContentLoaded', () => {
            // Set initial values
            document.getElementById('username').value = userData.username || '';
            document.getElementById('email').value = userData.email || '';
            
            // Set notification preferences
            const notificationPrefs = userData.notificationPreferences || {};
            document.getElementById('emailNotifications').checked = notificationPrefs.email || false;
            document.getElementById('discordNotifications').checked = notificationPrefs.discord || false;
            document.getElementById('serverStatusNotifications').checked = notificationPrefs.serverStatus || false;
            
            // Set 2FA status
            document.getElementById('twoFactorEnabled').checked = userData.twoFactorEnabled || false;
        });

        // Mobile menu functionality
        const mobileMenuBtn = document.getElementById('mobileMenuBtn');
        const mobileSearch = document.getElementById('mobileSearch');
        
        mobileMenuBtn.addEventListener('click', () => {
            mobileSearch.classList.toggle('hidden');
        });
        
        // Dropdown functionality
        const dropdownBtn = document.getElementById('dropdownBtn');
        const dropdownMenu = document.getElementById('dropdownMenu');
        
        dropdownBtn.addEventListener('click', () => {
            dropdownMenu.classList.toggle('hidden');
        });
        
        // Close dropdown when clicking outside
        document.addEventListener('click', (event) => {
            if (!dropdownBtn.contains(event.target) && !dropdownMenu.contains(event.target)) {
                dropdownMenu.classList.add('hidden');
            }
        });

        // Sidebar toggle for mobile
        const toggleSidebarBtn = document.getElementById('toggleSidebar');
        const sidebarIcon = document.getElementById('sidebarIcon');
        const sidebar = document.getElementById('sidebar');
        
        toggleSidebarBtn.addEventListener('click', () => {
            sidebar.classList.toggle('-translate-x-full');
            if (sidebar.classList.contains('-translate-x-full')) {
                sidebarIcon.classList.remove('fa-times');
                sidebarIcon.classList.add('fa-bars');
            } else {
                sidebarIcon.classList.remove('fa-bars');
                sidebarIcon.classList.add('fa-times');
            }
        });

        // API Key visibility toggle
        function toggleApiKeyVisibility() {
            const apiKey = document.getElementById('apiKey');
            const apiKeyToggle = document.getElementById('apiKeyToggle');
            
            if (apiKey.type === 'password') {
                apiKey.type = 'text';
                apiKeyToggle.classList.remove('fa-eye');
                apiKeyToggle.classList.add('fa-eye-slash');
            } else {
                apiKey.type = 'password';
                apiKeyToggle.classList.remove('fa-eye-slash');
                apiKeyToggle.classList.add('fa-eye');
            }
        }

        // Update API Key
        function updateApiKey() {
            const apiKey = document.getElementById('apiKey').value;
            
            fetch('/api/settings/updateApiKey', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ apiKey })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('API Key updated successfully!');
                    location.reload();
                } else {
                    alert('Failed to update API Key: ' + data.error);
                }
            })
            .catch(error => {
                alert('An error occurred while updating the API Key');
                console.error('Error:', error);
            });
        }

        // Regenerate API Key
        function regenerateApiKey() {
            if (!confirm('Are you sure you want to regenerate your API Key? This will invalidate your current key.')) {
                return;
            }

            fetch('/api/settings/regenerateApiKey', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    document.getElementById('apiKey').value = data.newApiKey;
                    alert('API Key regenerated successfully!');
                } else {
                    alert('Failed to regenerate API Key: ' + data.error);
                }
            })
            .catch(error => {
                alert('An error occurred while regenerating the API Key');
                console.error('Error:', error);
            });
        }

        // Disconnect Discord
        function disconnectDiscord() {
            if (!confirm('Are you sure you want to disconnect your Discord account?')) {
                return;
            }

            fetch('/api/settings/disconnectDiscord', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Discord account disconnected successfully!');
                    location.reload();
                } else {
                    alert('Failed to disconnect Discord account: ' + data.error);
                }
            })
            .catch(error => {
                alert('An error occurred while disconnecting Discord account');
                console.error('Error:', error);
            });
        }
    </script>
</body>
</html> 