<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title><%= extra.servers.title.create %></title>
	<link rel="icon" type="image/png" href="/assets/img/Flaxy Nodes v2.2.gif"/>
	
	<!-- Fonts and Icons -->
	<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
	
	<!-- Tailwind CSS -->
	<script src="https://cdn.tailwindcss.com"></script>
	<script>
		tailwind.config = {
			darkMode: 'class',
			theme: {
				extend: {
					fontFamily: {
						sans: ['Inter', 'sans-serif'],
					},
					colors: {
						primary: {
							50: '#f0f9ff',
							100: '#e0f2fe',
							200: '#bae6fd',
							300: '#7dd3fc',
							400: '#38bdf8',
							500: '#0ea5e9',
							600: '#0284c7',
							700: '#0369a1',
							800: '#075985',
							900: '#0c4a6e',
							950: '#082f49',
						},
						dark: {
							base: '#111827',
							light: '#1F2937',
							lighter: '#374151',
							card: '#1E293B'
						}
					},
					animation: {
						'fade-in': 'fadeIn 0.5s ease-in-out',
						'pulse-slow': 'pulse 4s cubic-bezier(0.4, 0, 0.6, 1) infinite',
					},
					keyframes: {
						fadeIn: {
							'0%': { opacity: '0' },
							'100%': { opacity: '1' },
						}
					}
				}
			}
		}
	</script>
	
	<style>
		body {
			background-color: #0f172a;
			color: #f1f5f9;
			font-family: 'Inter', sans-serif;
		}
		.navbar {
			background-color: rgba(15, 23, 42, 0.7);
			backdrop-filter: blur(10px);
			border-bottom: 1px solid rgba(148, 163, 184, 0.1);
		}
		.sidebar {
			background-color: #1e293b;
			border-right: 1px solid rgba(148, 163, 184, 0.1);
			transition: all 0.3s ease;
		}
		.card {
			background-color: #1e293b;
			border: 1px solid rgba(148, 163, 184, 0.1);
			transition: all 0.3s ease;
		}
		.card:hover {
			transform: translateY(-2px);
			box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
		}
		.gradient-border {
			position: relative;
			border-radius: 0.5rem;
			z-index: 0;
			overflow: hidden;
			padding: 1px;
		}
		.gradient-border::before {
			content: '';
			position: absolute;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			border-radius: 0.5rem;
			padding: 2px;
			background: linear-gradient(45deg, #0ea5e9, #8b5cf6, #ec4899);
			-webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
			-webkit-mask-composite: xor;
			mask-composite: exclude;
			z-index: -1;
		}
		.main-content {
			animation: fadeIn 0.5s ease-in-out;
		}
		@keyframes fadeIn {
			0% { opacity: 0; }
			100% { opacity: 1; }
		}
		
		/* Custom Scrollbar */
		::-webkit-scrollbar {
			width: 8px;
		}
		::-webkit-scrollbar-track {
			background: #1e293b;
		}
		::-webkit-scrollbar-thumb {
			background: #475569;
			border-radius: 4px;
		}
		::-webkit-scrollbar-thumb:hover {
			background: #64748b;
		}
		
		/* Form Styling */
		.form-input {
			background-color: #1e293b;
			border: 1px solid rgba(148, 163, 184, 0.2);
			color: #f1f5f9;
			transition: all 0.3s ease;
		}
		.form-input:focus {
			border-color: #0ea5e9;
			box-shadow: 0 0 0 3px rgba(14, 165, 233, 0.2);
		}
		.form-label {
			color: #94a3b8;
			font-weight: 500;
		}
		.form-helper {
			color: #64748b;
			font-size: 0.875rem;
		}
		.form-error {
			color: #f87171;
			font-size: 0.875rem;
		}
	</style>
</head>
<body class="min-h-screen">
	<%
		// Calculate current resource usage
		let currentram = 0;
		let currentdisk = 0;
		let currentcpu = 0;
		let currentservers = 0;
		
		if (pterodactyl && pterodactyl.relationships && pterodactyl.relationships.servers && pterodactyl.relationships.servers.data) {
			currentservers = pterodactyl.relationships.servers.data.length;
			
			for (let i = 0, len = pterodactyl.relationships.servers.data.length; i < len; i++) {
				currentram = currentram + (typeof pterodactyl.relationships.servers.data[i].attributes.limits.memory == "number" ? pterodactyl.relationships.servers.data[i].attributes.limits.memory : 0);
				currentdisk = currentdisk + (typeof pterodactyl.relationships.servers.data[i].attributes.limits.disk == "number" ? pterodactyl.relationships.servers.data[i].attributes.limits.disk : 0);
				currentcpu = currentcpu + (typeof pterodactyl.relationships.servers.data[i].attributes.limits.cpu == "number" ? pterodactyl.relationships.servers.data[i].attributes.limits.cpu : 0);
			}
		}
		
		const userData = {
			id: userinfo.id,
			username: userinfo.username || userinfo.email.split('@')[0],
			email: userinfo.email,
			isAdmin: typeof req.session !== 'undefined' ? req.session.isAdmin : false
		};
		
		const packageData = typeof packages !== 'undefined' ? packages : {
			ram: 0,
			disk: 0,
			cpu: 0,
			servers: 0
		};
		
		// Available resources
		const availableRam = (packageData.ram || 0) - currentram;
		const availableDisk = (packageData.disk || 0) - currentdisk;
		const availableCpu = (packageData.cpu || 0) - currentcpu;
		const availableServers = (packageData.servers || 0) - currentservers;
	%>

	<!-- Navbar -->
	<nav class="navbar fixed w-full h-16 z-10 px-4 py-2.5 flex items-center justify-between">
		<div class="flex items-center">
			<button id="sidebarBtn" class="sm:hidden mr-2 text-gray-300 hover:text-white">
				<i class="fas fa-bars text-xl"></i>
			</button>
			<a href="/" class="flex items-center">
				<img src="/assets/img/FlaxyNodes_logo.gif" class="h-8 w-8 mr-3 rounded-full" alt="Flaxy Nodes Logo">
				<div class="flex flex-col">
					<span class="self-center text-xl font-bold text-white">Flaxy Nodes</span>
					<span class="text-xs text-gray-400">Premium Game Hosting</span>
				</div>
			</a>
		</div>
		
		<div class="flex items-center gap-4">
			<div class="relative inline-block">
				<button id="dropdownBtn" class="flex items-center px-3 py-2 text-sm font-medium text-gray-300 rounded-lg hover:bg-gray-700 hover:text-white focus:outline-none">
					<span class="mr-2"><%= userData.username %></span>
					<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
					</svg>
				</button>
				<div id="dropdownMenu" class="hidden absolute right-0 mt-2 bg-gray-800 rounded-lg shadow-lg overflow-hidden z-20" style="min-width: 10rem;">
					<ul class="py-1 text-sm text-gray-200">
						<li>
							<a href="/settings" class="block px-4 py-2 hover:bg-gray-700">Settings</a>
						</li>
						<% if (userData.isAdmin) { %>
						<li>
							<a href="/admin" class="block px-4 py-2 hover:bg-gray-700">Admin Panel</a>
						</li>
						<% } %>
						<li>
							<a href="/auth/logout" class="block px-4 py-2 hover:bg-gray-700 text-red-400">Logout</a>
						</li>
					</ul>
				</div>
			</div>
		</div>
	</nav>
	
	<!-- Sidebar and Main Content -->
	<div class="flex h-screen pt-16">
		<!-- Sidebar -->
		<aside id="sidebar" class="fixed left-0 top-16 h-full z-10 w-64 transition-transform -translate-x-full sm:translate-x-0">
			<div class="h-full px-3 pb-4 overflow-y-auto sidebar">
				<ul class="space-y-2 pt-4 font-medium">
					<li>
						<a href="/dashboard" class="flex items-center p-3 text-gray-300 rounded-lg hover:bg-gray-700 group">
							<i class="fas fa-gauge-high w-5 h-5 text-gray-400 group-hover:text-white transition duration-75"></i>
							<span class="ms-3">Dashboard</span>
						</a>
					</li>
					<li>
						<a href="/servers" class="flex items-center p-3 text-gray-300 rounded-lg hover:bg-gray-700 group">
							<i class="fas fa-server w-5 h-5 text-gray-400 group-hover:text-white transition duration-75"></i>
							<span class="ms-3">My Servers</span>
						</a>
					</li>
					<li>
						<a href="/create" class="flex items-center p-3 text-white rounded-lg bg-primary-600 group">
							<i class="fas fa-plus w-5 h-5 text-white transition duration-75"></i>
							<span class="ms-3">Create Server</span>
						</a>
					</li>
					<li>
						<a href="/store" class="flex items-center p-3 text-gray-300 rounded-lg hover:bg-gray-700 group">
							<i class="fas fa-shopping-cart w-5 h-5 text-gray-400 group-hover:text-white transition duration-75"></i>
							<span class="ms-3">Resource Store</span>
						</a>
					</li>
					<li>
						<a href="/redeem" class="flex items-center p-3 text-gray-300 rounded-lg hover:bg-gray-700 group">
							<i class="fas fa-gift w-5 h-5 text-gray-400 group-hover:text-white transition duration-75"></i>
							<span class="ms-3">Redeem Coupon</span>
						</a>
					</li>
					<% if (req.session.isAdmin || (pterodactyl && pterodactyl.root_admin)) { %>
					<li>
						<a href="/admin" class="flex items-center p-3 text-gray-300 rounded-lg hover:bg-gray-700 group">
							<i class="fas fa-shield-alt w-5 h-5 text-gray-400 group-hover:text-white transition duration-75"></i>
							<span class="ms-3">Admin Panel</span>
						</a>
					</li>
					<% } %>
				</ul>
				
				<div class="pt-4 mt-4 border-t border-gray-700">
					<div class="px-3 py-4 rounded-lg bg-gray-800">
						<h3 class="text-sm font-medium text-gray-400 mb-2">Resource Limits</h3>
						<div class="space-y-3">
							<!-- RAM Usage -->
							<div>
								<div class="flex justify-between text-xs mb-1">
									<span>RAM: <%= currentram %>MB</span>
									<span><%= packageData.ram %>MB</span>
								</div>
								<div class="w-full bg-gray-700 rounded-full h-1.5">
									<div class="bg-blue-500 h-1.5 rounded-full" style="width: <%= Math.min(100, (currentram / (packageData.ram || 1)) * 100) %>%"></div>
								</div>
							</div>
							
							<!-- Disk Usage -->
							<div>
								<div class="flex justify-between text-xs mb-1">
									<span>Disk: <%= currentdisk %>MB</span>
									<span><%= packageData.disk %>MB</span>
								</div>
								<div class="w-full bg-gray-700 rounded-full h-1.5">
									<div class="bg-green-500 h-1.5 rounded-full" style="width: <%= Math.min(100, (currentdisk / (packageData.disk || 1)) * 100) %>%"></div>
								</div>
							</div>
							
							<!-- CPU Usage -->
							<div>
								<div class="flex justify-between text-xs mb-1">
									<span>CPU: <%= currentcpu %>%</span>
									<span><%= packageData.cpu %>%</span>
								</div>
								<div class="w-full bg-gray-700 rounded-full h-1.5">
									<div class="bg-purple-500 h-1.5 rounded-full" style="width: <%= Math.min(100, (currentcpu / (packageData.cpu || 1)) * 100) %>%"></div>
								</div>
							</div>
							
							<!-- Server Count -->
							<div>
								<div class="flex justify-between text-xs mb-1">
									<span>Servers: <%= currentservers %></span>
									<span><%= packageData.servers %></span>
								</div>
								<div class="w-full bg-gray-700 rounded-full h-1.5">
									<div class="bg-amber-500 h-1.5 rounded-full" style="width: <%= Math.min(100, (currentservers / (packageData.servers || 1)) * 100) %>%"></div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</aside>
		
		<!-- Main Content -->
		<div class="p-4 sm:ml-64 pt-5 w-full main-content">
			<div class="p-4">
				<!-- Page Header -->
				<div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-6">
					<div>
						<h1 class="text-3xl font-bold mb-2">Create Server</h1>
						<p class="text-gray-400">Create a new game server or application</p>
					</div>
					<a href="/servers" class="mt-4 md:mt-0 inline-flex items-center justify-center px-5 py-2.5 bg-gray-700 hover:bg-gray-600 focus:ring-4 focus:ring-gray-800 font-medium rounded-lg text-sm">
						<i class="fas fa-arrow-left mr-2"></i>
						Back to Servers
					</a>
				</div>
				
				<!-- Error Messages -->
				<% if (req.query.err) { %>
					<div class="p-4 mb-6 border border-red-600 bg-red-900/20 rounded-lg">
						<div class="flex items-center">
							<i class="fas fa-circle-exclamation text-red-500 mr-3 text-xl"></i>
							<div>
								<h3 class="text-red-400 font-medium mb-1">Error</h3>
								<% if (req.query.err == "NOTANUMBER") { %>
									<p class="text-gray-300">The RAM, disk, or CPU value you entered is not a valid number.</p>
								<% } else if (req.query.err == "MISSINGVARIABLE") { %>
									<p class="text-gray-300">You need to fill in all required fields to create a server.</p>
								<% } else if (req.query.err == "RAMEXCEED") { %>
									<p class="text-gray-300">You don't have enough RAM to create this server. You tried to allocate <%= req.query.err_ram %>MB but only have <%= availableRam %>MB available.</p>
								<% } else if (req.query.err == "DISKEXCEED") { %>
									<p class="text-gray-300">You don't have enough disk space to create this server. You tried to allocate <%= req.query.err_disk %>MB but only have <%= availableDisk %>MB available.</p>
								<% } else if (req.query.err == "CPUEXCEED") { %>
									<p class="text-gray-300">You don't have enough CPU to create this server. You tried to allocate <%= req.query.err_cpu %>% but only have <%= availableCpu %>% available.</p>
								<% } else if (req.query.err == "SERVEREXCEED") { %>
									<p class="text-gray-300">You have reached your maximum server limit. You cannot create any more servers.</p>
								<% } else if (req.query.err == "NOTENOUGHRAM") { %>
									<p class="text-gray-300">You need at least 1GB (1024MB) of RAM to create a server.</p>
								<% } else if (req.query.err == "NOTENOUGHDISK") { %>
									<p class="text-gray-300">You need at least 1GB (1024MB) of disk space to create a server.</p>
								<% } else if (req.query.err == "NOTENOUGHCPU") { %>
									<p class="text-gray-300">You need at least 10% CPU to create a server.</p>
								<% } else if (req.query.err == "ENVVARIABLEERROR") { %>
									<p class="text-gray-300">There was a problem with the server's environment variables. Please contact an administrator for assistance.</p>
								<% } else if (req.query.err == "CREATEFAILED") { %>
									<p class="text-gray-300">Failed to create server. Please try again later or contact support.</p>
								<% } else { %>
									<p class="text-gray-300">An error occurred while creating your server. Please try again.</p>
								<% } %>
							</div>
						</div>
					</div>
				<% } %>
				
				<!-- Server Creation Form -->
				<div class="grid grid-cols-1 lg:grid-cols-12 gap-6">
					<!-- Form Card -->
					<div class="lg:col-span-8 bg-dark-card rounded-lg border border-gray-700 p-6">
						<form action="/servers/create" method="post">
							<div class="mb-6">
								<h2 class="text-xl font-semibold mb-4">Server Details</h2>
								
								<!-- Server Name -->
								<div class="mb-4">
									<label for="name" class="form-label block mb-2">Server Name</label>
									<input type="text" id="name" name="name" placeholder="My Minecraft Server" required class="form-input w-full rounded-lg px-4 py-2.5 focus:outline-none">
									<p class="form-helper mt-1">A display name for your server.</p>
								</div>
								
								<!-- Location Selection -->
								<div class="mb-4">
									<label for="location" class="form-label">Location</label>
									<select id="location" name="location" class="form-input w-full rounded-lg" required>
										<option value="">Select a location</option>
										<% Object.entries(formattedLocations).forEach(([id, location]) => { %>
											<option value="<%= id %>">
												<%= location.name %> (<%= location.short %>)
												<% if (location.description) { %> - <%= location.description %><% } %>
											</option>
										<% }); %>
									</select>
									<p class="form-helper mt-1">Choose the location where your server will be hosted</p>
								</div>
								
								<!-- Server Type Selection -->
								<div class="mb-4">
									<label for="egg" class="form-label">Server Type</label>
									<select id="egg" name="egg" class="form-input w-full rounded-lg" required>
										<option value="">Select server type</option>
										<% nests.forEach(nest => { %>
											<optgroup label="<%= nest.name %>">
												<% if (eggs[nest.id]) { %>
													<% eggs[nest.id].forEach(egg => { %>
														<option value="<%= egg.id %>" data-nest="<%= nest.id %>">
															<%= egg.name %>
															<% if (egg.description) { %> - <%= egg.description %><% } %>
														</option>
													<% }); %>
												<% } %>
											</optgroup>
										<% }); %>
									</select>
									<p class="form-helper mt-1">Choose the type of server you want to create</p>
								</div>
							</div>
							
							<div class="mb-6">
								<h2 class="text-xl font-semibold mb-4">Resource Allocation</h2>
								
								<!-- RAM -->
								<div class="mb-4">
									<label for="ram" class="form-label block mb-2">Memory (RAM)</label>
									<div class="flex items-center">
										<input type="number" id="ram" name="ram" placeholder="1024" required min="1" max="<%= availableRam %>" class="form-input w-full rounded-lg px-4 py-2.5 focus:outline-none">
										<span class="ml-2 text-gray-400">MB</span>
									</div>
									<p class="form-helper mt-1">Available: <%= availableRam %>MB</p>
								</div>
								
								<!-- Disk -->
								<div class="mb-4">
									<label for="disk" class="form-label block mb-2">Disk Space</label>
									<div class="flex items-center">
										<input type="number" id="disk" name="disk" placeholder="4096" required min="1" max="<%= availableDisk %>" class="form-input w-full rounded-lg px-4 py-2.5 focus:outline-none">
										<span class="ml-2 text-gray-400">MB</span>
									</div>
									<p class="form-helper mt-1">Available: <%= availableDisk %>MB</p>
								</div>
								
								<!-- CPU -->
								<div class="mb-4">
									<label for="cpu" class="form-label block mb-2">CPU Limit</label>
									<div class="flex items-center">
										<input type="number" id="cpu" name="cpu" placeholder="100" required min="10" max="<%= availableCpu %>" class="form-input w-full rounded-lg px-4 py-2.5 focus:outline-none">
										<span class="ml-2 text-gray-400">%</span>
									</div>
									<p class="form-helper mt-1">Available: <%= availableCpu %>%</p>
								</div>
							</div>
							
							<!-- Submit Button -->
							<button type="submit" class="inline-flex items-center justify-center px-5 py-2.5 bg-blue-600 hover:bg-blue-700 focus:ring-4 focus:ring-blue-800 font-medium rounded-lg text-sm w-full sm:w-auto">
								<i class="fas fa-rocket mr-2"></i>
								Create Server
							</button>
						</form>
					</div>
					
					<!-- Resource Summary Card -->
					<div class="lg:col-span-4">
						<div class="bg-dark-card rounded-lg border border-gray-700 p-6 mb-6">
							<h2 class="text-xl font-semibold mb-4">Available Resources</h2>
							
							<div class="space-y-5">
								<!-- RAM -->
								<div>
									<div class="flex justify-between mb-2">
										<span class="text-gray-400">RAM</span>
										<span class="text-gray-300"><%= availableRam %>MB / <%= packageData.ram %>MB</span>
									</div>
									<div class="w-full bg-gray-700 rounded-full h-2.5">
										<div class="bg-blue-500 h-2.5 rounded-full" style="width: <%= Math.min(100, ((packageData.ram - availableRam) / (packageData.ram || 1)) * 100) %>%"></div>
									</div>
								</div>
								
								<!-- Disk -->
								<div>
									<div class="flex justify-between mb-2">
										<span class="text-gray-400">Disk</span>
										<span class="text-gray-300"><%= availableDisk %>MB / <%= packageData.disk %>MB</span>
									</div>
									<div class="w-full bg-gray-700 rounded-full h-2.5">
										<div class="bg-green-500 h-2.5 rounded-full" style="width: <%= Math.min(100, ((packageData.disk - availableDisk) / (packageData.disk || 1)) * 100) %>%"></div>
									</div>
								</div>
								
								<!-- CPU -->
								<div>
									<div class="flex justify-between mb-2">
										<span class="text-gray-400">CPU</span>
										<span class="text-gray-300"><%= availableCpu %>% / <%= packageData.cpu %>%</span>
									</div>
									<div class="w-full bg-gray-700 rounded-full h-2.5">
										<div class="bg-purple-500 h-2.5 rounded-full" style="width: <%= Math.min(100, ((packageData.cpu - availableCpu) / (packageData.cpu || 1)) * 100) %>%"></div>
									</div>
								</div>
								
								<!-- Servers -->
								<div>
									<div class="flex justify-between mb-2">
										<span class="text-gray-400">Servers</span>
										<span class="text-gray-300"><%= availableServers %> / <%= packageData.servers %></span>
									</div>
									<div class="w-full bg-gray-700 rounded-full h-2.5">
										<div class="bg-amber-500 h-2.5 rounded-full" style="width: <%= Math.min(100, ((packageData.servers - availableServers) / (packageData.servers || 1)) * 100) %>%"></div>
									</div>
								</div>
							</div>
						</div>
						
						<!-- Resource Tips Card -->
						<div class="bg-dark-card rounded-lg border border-gray-700 p-6">
							<h2 class="text-xl font-semibold mb-4">Resource Tips</h2>
							
							<div class="space-y-4">
								<div class="flex items-start">
									<div class="w-8 h-8 rounded-lg bg-blue-500/20 flex items-center justify-center mr-3 mt-0.5">
										<i class="fas fa-lightbulb text-blue-400"></i>
									</div>
									<p class="text-gray-300 text-sm">Most Minecraft servers need at least 2GB RAM to run smoothly.</p>
								</div>
								
								<div class="flex items-start">
									<div class="w-8 h-8 rounded-lg bg-blue-500/20 flex items-center justify-center mr-3 mt-0.5">
										<i class="fas fa-lightbulb text-blue-400"></i>
									</div>
									<p class="text-gray-300 text-sm">Allocate at least 100% CPU for resource-intensive games like Minecraft.</p>
								</div>
								
								<div class="flex items-start">
									<div class="w-8 h-8 rounded-lg bg-blue-500/20 flex items-center justify-center mr-3 mt-0.5">
										<i class="fas fa-lightbulb text-blue-400"></i>
									</div>
									<p class="text-gray-300 text-sm">Disk space depends on the game and mods. Most servers need at least 4GB.</p>
								</div>
								
								<div class="flex items-start">
									<div class="w-8 h-8 rounded-lg bg-blue-500/20 flex items-center justify-center mr-3 mt-0.5">
										<i class="fas fa-lightbulb text-blue-400"></i>
									</div>
									<p class="text-gray-300 text-sm">Need more resources? Visit the <a href="/store" class="text-blue-400 hover:underline">Resource Store</a> to purchase additional RAM, disk, and CPU.</p>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
	
	<script>
		// Dropdown menu toggle
		const dropdownBtn = document.getElementById('dropdownBtn');
		const dropdownMenu = document.getElementById('dropdownMenu');
		
		dropdownBtn.addEventListener('click', () => {
			dropdownMenu.classList.toggle('hidden');
		});
		
		// Close dropdown when clicking outside
		document.addEventListener('click', (event) => {
			if (!dropdownBtn.contains(event.target) && !dropdownMenu.contains(event.target)) {
				dropdownMenu.classList.add('hidden');
			}
		});
		
		// Mobile sidebar toggle
		const sidebarBtn = document.getElementById('sidebarBtn');
		const sidebar = document.getElementById('sidebar');
		
		if (sidebarBtn) {
			sidebarBtn.addEventListener('click', () => {
				sidebar.classList.toggle('-translate-x-full');
			});
		}
		
		// Resource allocation form validation
		const form = document.querySelector('form');
		const ramInput = document.getElementById('ram');
		const diskInput = document.getElementById('disk');
		const cpuInput = document.getElementById('cpu');
		const nameInput = document.getElementById('name');
		const eggInput = document.getElementById('egg');
		const locationInput = document.getElementById('location');
		
		form.addEventListener('submit', (e) => {
			let isValid = true;
			let errorMessage = '';
			
			// Validate Server Name
			if (!nameInput.value.trim()) {
				nameInput.classList.add('border-red-500');
				isValid = false;
				errorMessage = 'Please enter a server name.';
			} else {
				nameInput.classList.remove('border-red-500');
			}
			
			// Validate Server Type (Egg)
			if (!eggInput.value) {
				eggInput.classList.add('border-red-500');
				isValid = false;
				errorMessage = 'Please select a server type.';
			} else {
				eggInput.classList.remove('border-red-500');
			}
			
			// Validate Location
			if (!locationInput.value) {
				locationInput.classList.add('border-red-500');
				isValid = false;
				errorMessage = 'Please select a server location.';
			} else {
				locationInput.classList.remove('border-red-500');
			}
			
			// Validate RAM
			const ramValue = parseInt(ramInput.value);
			if (isNaN(ramValue) || ramValue < 1024) {
				ramInput.classList.add('border-red-500');
				isValid = false;
				errorMessage = 'RAM must be at least 1024MB (1GB).';
			} else if (ramValue > <%= availableRam %>) {
				ramInput.classList.add('border-red-500');
				isValid = false;
				errorMessage = `You only have ${<%= availableRam %>}MB RAM available.`;
			} else {
				ramInput.classList.remove('border-red-500');
			}
			
			// Validate Disk
			const diskValue = parseInt(diskInput.value);
			if (isNaN(diskValue) || diskValue < 1024) {
				diskInput.classList.add('border-red-500');
				isValid = false;
				errorMessage = 'Disk space must be at least 1024MB (1GB).';
			} else if (diskValue > <%= availableDisk %>) {
				diskInput.classList.add('border-red-500');
				isValid = false;
				errorMessage = `You only have ${<%= availableDisk %>}MB disk space available.`;
			} else {
				diskInput.classList.remove('border-red-500');
			}
			
			// Validate CPU
			const cpuValue = parseInt(cpuInput.value);
			if (isNaN(cpuValue) || cpuValue < 10) {
				cpuInput.classList.add('border-red-500');
				isValid = false;
				errorMessage = 'CPU must be at least 10%.';
			} else if (cpuValue > <%= availableCpu %>) {
				cpuInput.classList.add('border-red-500');
				isValid = false;
				errorMessage = `You only have ${<%= availableCpu %>% CPU available.`;
			} else {
				cpuInput.classList.remove('border-red-500');
			}
			
			// Check server limit
			if (<%= availableServers %> <= 0) {
				isValid = false;
				errorMessage = 'You have reached your maximum server limit.';
			}
			
			if (!isValid) {
				e.preventDefault();
				alert(errorMessage);
			}
		});
		
		// Real-time validation feedback
		[ramInput, diskInput, cpuInput].forEach(input => {
			input.addEventListener('input', function() {
				const value = parseInt(this.value);
				if (isNaN(value) || value < 0) {
					this.classList.add('border-red-500');
				} else {
					this.classList.remove('border-red-500');
				}
			});
		});
	</script>
</body>
</html>