<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Node Management | Sriyan Nodes</title>
    <link rel="icon" type="image/png" href="./assets/img/SriyanNodes_Logo.gif"/>
    
    <!-- Fonts and Icons -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    
    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            darkMode: 'class',
            theme: {
                extend: {
                    fontFamily: {
                        sans: ['Poppins', 'sans-serif'],
                    },
                    colors: {
                        primary: {
                            50: '#eef2ff',
                            100: '#e0e7ff',
                            200: '#c7d2fe',
                            300: '#a5b4fc',
                            400: '#818cf8',
                            500: '#6366f1',
                            600: '#4f46e5',
                            700: '#4338ca',
                            800: '#3730a3',
                            900: '#312e81',
                            950: '#1e1b4b',
                        },
                        dark: {
                            base: '#0f0f12',
                            light: '#1a1a21',
                            lighter: '#24242e',
                            card: '#1a1a21'
                        }
                    },
                    animation: {
                        'fade-in': 'fadeIn 0.5s ease-in-out',
                        'float': 'float 3s ease-in-out infinite',
                    },
                    keyframes: {
                        fadeIn: {
                            '0%': { opacity: '0' },
                            '100%': { opacity: '1' },
                        },
                        float: {
                            '0%, 100%': { transform: 'translateY(0)' },
                            '50%': { transform: 'translateY(-10px)' },
                        }
                    }
                }
            }
        }
    </script>
    
    <style>
        body {
            background-color: #0f0f12;
            color: #f5f5f7;
            font-family: 'Poppins', sans-serif;
        }
        
        .glass-card {
            background: rgba(26, 26, 31, 0.7);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .btn-primary {
            background-color: #6366f1;
            border-radius: 0.5rem;
            padding: 0.5rem 1rem;
            transition: all 0.3s ease;
        }
        
        .btn-primary:hover {
            background-color: #4f46e5;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(99, 102, 241, 0.2);
        }

        /* Custom scrollbar */
        ::-webkit-scrollbar {
            width: 8px;
            height: 8px;
        }
        
        ::-webkit-scrollbar-track {
            background: #1e1e24;
        }
        
        ::-webkit-scrollbar-thumb {
            background: #3a3a43;
            border-radius: 4px;
        }
        
        ::-webkit-scrollbar-thumb:hover {
            background: #4a4a55;
        }
    </style>
</head>
<body class="min-h-screen">
    <div class="container mx-auto px-4 py-8">
        <div class="flex items-center justify-between mb-8">
            <h1 class="text-3xl font-bold">Node Management</h1>
            <button type="button" class="btn-primary text-white font-medium" data-bs-toggle="modal" data-bs-target="#createNodeModal">
                <i class="fas fa-plus mr-2"></i> Create New Node
            </button>
        </div>
        
        <!-- Resource Overview Section -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
            <!-- Total Servers Card -->
            <div class="glass-card rounded-xl p-6 shadow-lg animate-fade-in">
                <div class="flex items-center justify-between mb-4">
                    <h3 class="text-sm font-medium text-gray-400">Total Servers</h3>
                    <div class="w-10 h-10 rounded-full bg-blue-500/10 flex items-center justify-center">
                        <i class="fas fa-server text-blue-500"></i>
                    </div>
                </div>
                <p class="text-2xl font-semibold mb-1"><%= totalServers || 0 %></p>
                <div class="text-xs text-gray-400">
                    Servers across all nodes
                </div>
            </div>
            
            <!-- Total Memory Card -->
            <div class="glass-card rounded-xl p-6 shadow-lg animate-fade-in">
                <div class="flex items-center justify-between mb-4">
                    <h3 class="text-sm font-medium text-gray-400">Total Memory</h3>
                    <div class="w-10 h-10 rounded-full bg-purple-500/10 flex items-center justify-center">
                        <i class="fas fa-memory text-purple-500"></i>
                    </div>
                </div>
                <p class="text-2xl font-semibold mb-1"><%= (totalMemory || 0) / 1024 %> GB</p>
                <div class="flex items-center text-xs text-gray-400">
                    <span class="flex items-center text-emerald-400 mr-2">
                        <i class="fas fa-check-circle mr-1"></i> <%= (availableMemory || 0) / 1024 %> GB Available
                    </span>
                    <%= Math.round(((totalMemory - availableMemory) / totalMemory) * 100) || 0 %>% Used
                </div>
            </div>
            
            <!-- Total Storage Card -->
            <div class="glass-card rounded-xl p-6 shadow-lg animate-fade-in">
                <div class="flex items-center justify-between mb-4">
                    <h3 class="text-sm font-medium text-gray-400">Total Storage</h3>
                    <div class="w-10 h-10 rounded-full bg-emerald-500/10 flex items-center justify-center">
                        <i class="fas fa-hdd text-emerald-500"></i>
                    </div>
                </div>
                <p class="text-2xl font-semibold mb-1"><%= (totalDisk || 0) / 1024 %> GB</p>
                <div class="flex items-center text-xs text-gray-400">
                    <span class="flex items-center text-emerald-400 mr-2">
                        <i class="fas fa-check-circle mr-1"></i> <%= (availableDisk || 0) / 1024 %> GB Available
                    </span>
                    <%= Math.round(((totalDisk - availableDisk) / totalDisk) * 100) || 0 %>% Used
                </div>
            </div>
            
            <!-- Total Allocations Card -->
            <div class="glass-card rounded-xl p-6 shadow-lg animate-fade-in">
                <div class="flex items-center justify-between mb-4">
                    <h3 class="text-sm font-medium text-gray-400">Allocations</h3>
                    <div class="w-10 h-10 rounded-full bg-amber-500/10 flex items-center justify-center">
                        <i class="fas fa-network-wired text-amber-500"></i>
                    </div>
                </div>
                <p class="text-2xl font-semibold mb-1"><%= totalAllocations || 0 %></p>
                <div class="flex items-center text-xs text-gray-400">
                    <span class="flex items-center text-emerald-400 mr-2">
                        <i class="fas fa-check-circle mr-1"></i> <%= availableAllocations || 0 %> Available
                    </span>
                    <%= Math.round(((totalAllocations - availableAllocations) / totalAllocations) * 100) || 0 %>% Used
                </div>
            </div>
        </div>
        
        <!-- Nodes Table -->
        <div class="glass-card rounded-2xl p-6 mb-8 animate-fade-in">
            <div class="flex items-center justify-between mb-6">
                <h2 class="text-xl font-semibold">All Nodes</h2>
            </div>
            
            <div class="overflow-x-auto">
                <table class="w-full">
                    <thead>
                        <tr class="text-left text-gray-400 text-sm border-b border-gray-700">
                            <th class="pb-3 font-medium">Name</th>
                            <th class="pb-3 font-medium">Location</th>
                            <th class="pb-3 font-medium">RAM</th>
                            <th class="pb-3 font-medium">Disk</th>
                            <th class="pb-3 font-medium">Servers</th>
                            <th class="pb-3 font-medium">Status</th>
                            <th class="pb-3 font-medium">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (nodes && nodes.length > 0) { %>
                            <% nodes.forEach(node => { %>
                                <tr class="border-b border-gray-700/50 hover:bg-dark-lighter/30 transition-colors duration-150">
                                    <td class="py-4">
                                        <div class="flex items-center">
                                            <div class="w-8 h-8 rounded-full bg-primary-500/10 flex items-center justify-center mr-3">
                                                <i class="fas fa-microchip text-primary-500"></i>
                                            </div>
                                            <div>
                                                <div class="font-medium"><%= node.name %></div>
                                                <div class="text-xs text-gray-400"><%= node.id %></div>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="py-4"><%= node.location ? node.location : 'Unknown' %></td>
                                    <td class="py-4">
                                        <div class="w-32">
                                            <div class="flex justify-between text-xs mb-1">
                                                <span><%= Math.round((node.memory_usage / node.memory) * 100) || 0 %>% Used</span>
                                                <span><%= (node.memory / 1024) || 0 %> GB</span>
                                            </div>
                                            <div class="w-full h-1.5 bg-gray-700 rounded-full overflow-hidden">
                                                <div class="h-full bg-gradient-to-r from-primary-500 to-blue-500 rounded-full" style="width: <%= Math.round((node.memory_usage / node.memory) * 100) || 0 %>%"></div>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="py-4">
                                        <div class="w-32">
                                            <div class="flex justify-between text-xs mb-1">
                                                <span><%= Math.round((node.disk_usage / node.disk) * 100) || 0 %>% Used</span>
                                                <span><%= (node.disk / 1024) || 0 %> GB</span>
                                            </div>
                                            <div class="w-full h-1.5 bg-gray-700 rounded-full overflow-hidden">
                                                <div class="h-full bg-gradient-to-r from-emerald-500 to-green-500 rounded-full" style="width: <%= Math.round((node.disk_usage / node.disk) * 100) || 0 %>%"></div>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="py-4"><%= node.servers || 0 %></td>
                                    <td class="py-4">
                                        <% if (node.online) { %>
                                            <span class="px-2 py-1 rounded-full text-xs font-medium bg-emerald-900/30 text-emerald-400">
                                                Online
                                            </span>
                                        <% } else { %>
                                            <span class="px-2 py-1 rounded-full text-xs font-medium bg-red-900/30 text-red-400">
                                                Offline
                                            </span>
                                        <% } %>
                                    </td>
                                    <td class="py-4">
                                        <div class="flex space-x-2">
                                            <a href="/admin/nodes/<%= node.id %>/view" class="p-2 rounded-lg bg-blue-500/10 text-blue-400 hover:bg-blue-500/20 transition-colors duration-200" title="View Node">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a href="/admin/nodes/<%= node.id %>/edit" class="p-2 rounded-lg bg-purple-500/10 text-purple-400 hover:bg-purple-500/20 transition-colors duration-200" title="Edit Node">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <a href="/admin/nodes/<%= node.id %>/allocations" class="p-2 rounded-lg bg-amber-500/10 text-amber-400 hover:bg-amber-500/20 transition-colors duration-200" title="View Allocations">
                                                <i class="fas fa-network-wired"></i>
                                            </a>
                                            <button onclick="deleteNode('<%= node.id %>')" class="p-2 rounded-lg bg-red-500/10 text-red-400 hover:bg-red-500/20 transition-colors duration-200" title="Delete Node">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            <% }); %>
                        <% } else { %>
                            <tr>
                                <td colspan="7" class="py-4 text-center text-gray-400">No nodes found</td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    
    <!-- Create Node Modal -->
    <div class="fixed inset-0 z-50 hidden items-center justify-center overflow-y-auto overflow-x-hidden" id="createNodeModal" tabindex="-1" aria-labelledby="createNodeModalLabel" aria-hidden="true">
        <div class="fixed inset-0 bg-black bg-opacity-50 transition-opacity"></div>
        <div class="relative max-w-2xl w-full p-6 mx-auto my-8">
            <div class="bg-dark-light rounded-xl shadow-xl border border-gray-700 p-6">
                <div class="flex items-start justify-between mb-4">
                    <h3 class="text-xl font-semibold text-white" id="createNodeModalLabel">Create New Node</h3>
                    <button type="button" class="text-gray-400 hover:text-white" data-bs-dismiss="modal" aria-label="Close">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
                <form action="/admin/nodes/create" method="POST">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                        <div>
                            <label for="name" class="block text-sm font-medium text-gray-400 mb-1">Node Name</label>
                            <input type="text" id="name" name="name" class="w-full py-2 px-3 bg-dark-lighter text-white rounded-lg border border-gray-700 focus:border-primary-500 focus:ring-2 focus:ring-primary-500 focus:outline-none" placeholder="Node Name" required>
                        </div>
                        <div>
                            <label for="location" class="block text-sm font-medium text-gray-400 mb-1">Location</label>
                            <select id="location" name="location_id" class="w-full py-2 px-3 bg-dark-lighter text-white rounded-lg border border-gray-700 focus:border-primary-500 focus:ring-2 focus:ring-primary-500 focus:outline-none" required>
                                <option value="">Select Location</option>
                                <% if (locations && locations.length > 0) { %>
                                    <% locations.forEach(location => { %>
                                        <option value="<%= location.id %>"><%= location.name %></option>
                                    <% }); %>
                                <% } %>
                            </select>
                        </div>
                        <div>
                            <label for="fqdn" class="block text-sm font-medium text-gray-400 mb-1">FQDN</label>
                            <input type="text" id="fqdn" name="fqdn" class="w-full py-2 px-3 bg-dark-lighter text-white rounded-lg border border-gray-700 focus:border-primary-500 focus:ring-2 focus:ring-primary-500 focus:outline-none" placeholder="node.example.com" required>
                        </div>
                        <div>
                            <label for="scheme" class="block text-sm font-medium text-gray-400 mb-1">Scheme</label>
                            <select id="scheme" name="scheme" class="w-full py-2 px-3 bg-dark-lighter text-white rounded-lg border border-gray-700 focus:border-primary-500 focus:ring-2 focus:ring-primary-500 focus:outline-none" required>
                                <option value="https">HTTPS</option>
                                <option value="http">HTTP</option>
                            </select>
                        </div>
                        <div>
                            <label for="memory" class="block text-sm font-medium text-gray-400 mb-1">Total Memory (MB)</label>
                            <input type="number" id="memory" name="memory" class="w-full py-2 px-3 bg-dark-lighter text-white rounded-lg border border-gray-700 focus:border-primary-500 focus:ring-2 focus:ring-primary-500 focus:outline-none" placeholder="32768" required>
                        </div>
                        <div>
                            <label for="disk" class="block text-sm font-medium text-gray-400 mb-1">Total Disk Space (MB)</label>
                            <input type="number" id="disk" name="disk" class="w-full py-2 px-3 bg-dark-lighter text-white rounded-lg border border-gray-700 focus:border-primary-500 focus:ring-2 focus:ring-primary-500 focus:outline-none" placeholder="512000" required>
                        </div>
                        <div>
                            <label for="daemon_port" class="block text-sm font-medium text-gray-400 mb-1">Daemon Port</label>
                            <input type="number" id="daemon_port" name="daemon_port" class="w-full py-2 px-3 bg-dark-lighter text-white rounded-lg border border-gray-700 focus:border-primary-500 focus:ring-2 focus:ring-primary-500 focus:outline-none" placeholder="8080" value="8080" required>
                        </div>
                        <div>
                            <label for="daemon_token" class="block text-sm font-medium text-gray-400 mb-1">Daemon Token</label>
                            <input type="password" id="daemon_token" name="daemon_token" class="w-full py-2 px-3 bg-dark-lighter text-white rounded-lg border border-gray-700 focus:border-primary-500 focus:ring-2 focus:ring-primary-500 focus:outline-none" placeholder="Daemon Token" required>
                        </div>
                    </div>
                    <div class="flex items-center justify-end">
                        <button type="button" class="px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg transition-colors duration-200 mr-3" data-bs-dismiss="modal">
                            Cancel
                        </button>
                        <button type="submit" class="px-4 py-2 bg-primary-600 hover:bg-primary-700 text-white rounded-lg transition-colors duration-200">
                            Create Node
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    
    <script>
        // Delete Node Function
        function deleteNode(nodeId) {
            if (confirm('Are you sure you want to delete this node? This action cannot be undone.')) {
                window.location.href = `/admin/nodes/${nodeId}/delete`;
            }
        }
        
        // Modal Controls
        document.addEventListener('DOMContentLoaded', function() {
            const createNodeBtn = document.querySelector('[data-bs-target="#createNodeModal"]');
            const createNodeModal = document.getElementById('createNodeModal');
            const closeBtns = document.querySelectorAll('[data-bs-dismiss="modal"]');
            
            createNodeBtn.addEventListener('click', function() {
                createNodeModal.classList.remove('hidden');
                createNodeModal.classList.add('flex');
            });
            
            closeBtns.forEach(btn => {
                btn.addEventListener('click', function() {
                    createNodeModal.classList.add('hidden');
                    createNodeModal.classList.remove('flex');
                });
            });
            
            // Close modal when clicking outside
            createNodeModal.addEventListener('click', function(event) {
                if (event.target === createNodeModal) {
                    createNodeModal.classList.add('hidden');
                    createNodeModal.classList.remove('flex');
                }
            });
        });
    </script>
</body>
</html>