<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mount Management | Sriyan Nodes</title>
    <link rel="icon" type="image/png" href="./assets/img/SriyanNodes_Logo.gif"/>
    
    <!-- Fonts and Icons -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    
    <!-- Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            darkMode: 'class',
            theme: {
                extend: {
                    fontFamily: {
                        sans: ['Poppins', 'sans-serif'],
                    },
                    colors: {
                        primary: {
                            50: '#fff5f5',
                            100: '#fee2e2',
                            200: '#fecaca',
                            300: '#fca5a5',
                            400: '#f87171',
                            500: '#ef4444',
                            600: '#dc2626',
                            700: '#b91c1c',
                            800: '#991b1b',
                            900: '#7f1d1d',
                            950: '#450a0a',
                        },
                        dark: {
                            base: '#0f0f12',
                            light: '#1a1a21',
                            lighter: '#24242e',
                            card: '#1a1a21'
                        }
                    },
                    animation: {
                        'fade-in': 'fadeIn 0.5s ease-in-out',
                        'float': 'float 3s ease-in-out infinite',
                    },
                    keyframes: {
                        fadeIn: {
                            '0%': { opacity: '0' },
                            '100%': { opacity: '1' },
                        },
                        float: {
                            '0%, 100%': { transform: 'translateY(0)' },
                            '50%': { transform: 'translateY(-10px)' },
                        }
                    }
                }
            }
        }
    </script>
    
    <style>
        body {
            background-color: #0f0f12;
            color: #f5f5f7;
            font-family: 'Poppins', sans-serif;
        }
        
        .glass-card {
            background: rgba(26, 26, 31, 0.7);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .btn-primary {
            background-color: #ef4444;
            border-radius: 0.5rem;
            padding: 0.5rem 1rem;
            transition: all 0.3s ease;
        }
        
        .btn-primary:hover {
            background-color: #dc2626;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(99, 102, 241, 0.2);
        }

        /* Custom scrollbar */
        ::-webkit-scrollbar {
            width: 8px;
            height: 8px;
        }
        
        ::-webkit-scrollbar-track {
            background: #1e1e24;
        }
        
        ::-webkit-scrollbar-thumb {
            background: #3a3a43;
            border-radius: 4px;
        }
        
        ::-webkit-scrollbar-thumb:hover {
            background: #4a4a55;
        }
    </style>
</head>
<body class="min-h-screen">
    <div class="container mx-auto px-4 py-8">
        <div class="flex items-center justify-between mb-8">
            <h1 class="text-3xl font-bold">Mount Management</h1>
            <button type="button" class="btn-primary text-white font-medium" data-bs-toggle="modal" data-bs-target="#createMountModal">
                <i class="fas fa-plus mr-2"></i> Create New Mount
            </button>
        </div>
        
        <!-- Introduction Card -->
        <div class="glass-card rounded-2xl p-6 mb-8 animate-fade-in">
            <div class="flex items-start">
                <div class="w-12 h-12 rounded-full bg-primary-500/10 flex items-center justify-center mr-4">
                    <i class="fas fa-hdd text-primary-500 text-xl"></i>
                </div>
                <div>
                    <h2 class="text-xl font-semibold mb-2">Mount Points</h2>
                    <p class="text-gray-300">Mount points allow you to share directories between servers. This can be useful for sharing common resources like game updates, libraries, or shared configurations.</p>
                </div>
            </div>
        </div>
        
        <!-- Mounts Table -->
        <div class="glass-card rounded-2xl p-6 mb-8 animate-fade-in">
            <div class="flex items-center justify-between mb-6">
                <h2 class="text-xl font-semibold">All Mounts</h2>
            </div>
            
            <div class="overflow-x-auto">
                <table class="w-full">
                    <thead>
                        <tr class="text-left text-gray-400 text-sm border-b border-gray-700">
                            <th class="pb-3 font-medium">Name</th>
                            <th class="pb-3 font-medium">Source</th>
                            <th class="pb-3 font-medium">Target</th>
                            <th class="pb-3 font-medium">Read Only</th>
                            <th class="pb-3 font-medium">User Mountable</th>
                            <th class="pb-3 font-medium">Nodes</th>
                            <th class="pb-3 font-medium">Eggs</th>
                            <th class="pb-3 font-medium">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% if (mounts && mounts.length > 0) { %>
                            <% mounts.forEach(mount => { %>
                                <tr class="border-b border-gray-700/50 hover:bg-dark-lighter/30 transition-colors duration-150">
                                    <td class="py-4">
                                        <div class="flex items-center">
                                            <div class="w-8 h-8 rounded-full bg-primary-500/10 flex items-center justify-center mr-3">
                                                <i class="fas fa-hdd text-primary-500"></i>
                                            </div>
                                            <div>
                                                <div class="font-medium"><%= mount.name %></div>
                                                <div class="text-xs text-gray-400"><%= mount.id %></div>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="py-4"><code class="bg-dark-lighter px-2 py-1 rounded text-sm"><%= mount.source %></code></td>
                                    <td class="py-4"><code class="bg-dark-lighter px-2 py-1 rounded text-sm"><%= mount.target %></code></td>
                                    <td class="py-4">
                                        <% if (mount.read_only) { %>
                                            <span class="px-2 py-1 rounded-full text-xs font-medium bg-amber-900/30 text-amber-400">
                                                Read Only
                                            </span>
                                        <% } else { %>
                                            <span class="px-2 py-1 rounded-full text-xs font-medium bg-blue-900/30 text-blue-400">
                                                Read/Write
                                            </span>
                                        <% } %>
                                    </td>
                                    <td class="py-4">
                                        <% if (mount.user_mountable) { %>
                                            <span class="px-2 py-1 rounded-full text-xs font-medium bg-emerald-900/30 text-emerald-400">
                                                Yes
                                            </span>
                                        <% } else { %>
                                            <span class="px-2 py-1 rounded-full text-xs font-medium bg-gray-900/30 text-gray-400">
                                                No
                                            </span>
                                        <% } %>
                                    </td>
                                    <td class="py-4"><%= mount.nodes ? mount.nodes.length : 0 %></td>
                                    <td class="py-4"><%= mount.eggs ? mount.eggs.length : 0 %></td>
                                    <td class="py-4">
                                        <div class="flex space-x-2">
                                            <button onclick="editMount('<%= mount.id %>')" class="p-2 rounded-lg bg-primary-500/10 text-blue-400 hover:bg-primary-500/20 transition-colors duration-200" title="Edit Mount">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                            <button onclick="deleteMount('<%= mount.id %>')" class="p-2 rounded-lg bg-red-500/10 text-red-400 hover:bg-red-500/20 transition-colors duration-200" title="Delete Mount">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            <% }); %>
                        <% } else { %>
                            <tr>
                                <td colspan="8" class="py-4 text-center text-gray-400">No mounts found</td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    
    <!-- Create Mount Modal -->
    <div class="fixed inset-0 z-50 hidden items-center justify-center overflow-y-auto overflow-x-hidden" id="createMountModal" tabindex="-1" aria-labelledby="createMountModalLabel" aria-hidden="true">
        <div class="fixed inset-0 bg-black bg-opacity-50 transition-opacity"></div>
        <div class="relative max-w-2xl w-full p-6 mx-auto my-8">
            <div class="bg-dark-light rounded-xl shadow-xl border border-gray-700 p-6">
                <div class="flex items-start justify-between mb-4">
                    <h3 class="text-xl font-semibold text-white" id="createMountModalLabel">Create New Mount</h3>
                    <button type="button" class="text-gray-400 hover:text-white" data-bs-dismiss="modal" aria-label="Close">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
                <form action="/admin/mounts/create" method="POST">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                        <div class="md:col-span-2">
                            <label for="name" class="block text-sm font-medium text-gray-400 mb-1">Mount Name</label>
                            <input type="text" id="name" name="name" class="w-full py-2 px-3 bg-dark-lighter text-white rounded-lg border border-gray-700 focus:border-primary-500 focus:ring-2 focus:ring-primary-500 focus:outline-none" placeholder="Game Updates" required>
                            <p class="mt-1 text-xs text-gray-400">A descriptive name for this mount point.</p>
                        </div>
                        <div>
                            <label for="source" class="block text-sm font-medium text-gray-400 mb-1">Source Directory</label>
                            <input type="text" id="source" name="source" class="w-full py-2 px-3 bg-dark-lighter text-white rounded-lg border border-gray-700 focus:border-primary-500 focus:ring-2 focus:ring-primary-500 focus:outline-none" placeholder="/mnt/gamefiles" required>
                            <p class="mt-1 text-xs text-gray-400">The directory on the host to mount.</p>
                        </div>
                        <div>
                            <label for="target" class="block text-sm font-medium text-gray-400 mb-1">Target Directory</label>
                            <input type="text" id="target" name="target" class="w-full py-2 px-3 bg-dark-lighter text-white rounded-lg border border-gray-700 focus:border-primary-500 focus:ring-2 focus:ring-primary-500 focus:outline-none" placeholder="/gamefiles" required>
                            <p class="mt-1 text-xs text-gray-400">The directory in the container to mount to.</p>
                        </div>
                        <div>
                            <div class="flex items-center mb-2">
                                <input type="checkbox" id="read_only" name="read_only" class="w-4 h-4 text-primary-600 bg-dark-lighter border-gray-700 rounded focus:ring-primary-500 focus:ring-2">
                                <label for="read_only" class="ml-2 text-sm font-medium text-gray-400">Read Only</label>
                            </div>
                            <p class="text-xs text-gray-400">If enabled, users will only be able to read files in this directory.</p>
                        </div>
                        <div>
                            <div class="flex items-center mb-2">
                                <input type="checkbox" id="user_mountable" name="user_mountable" class="w-4 h-4 text-primary-600 bg-dark-lighter border-gray-700 rounded focus:ring-primary-500 focus:ring-2">
                                <label for="user_mountable" class="ml-2 text-sm font-medium text-gray-400">User Mountable</label>
                            </div>
                            <p class="text-xs text-gray-400">If enabled, users will be able to select this mount when creating a server.</p>
                        </div>
                    </div>
                    
                    <div class="mb-6">
                        <label class="block text-sm font-medium text-gray-400 mb-3">Select Nodes</label>
                        <div class="grid grid-cols-2 sm:grid-cols-3 gap-3 max-h-40 overflow-y-auto p-2 bg-dark-lighter rounded-lg">
                            <% if (nodes && nodes.length > 0) { %>
                                <% nodes.forEach(node => { %>
                                    <div class="flex items-center">
                                        <input type="checkbox" id="node_<%= node.id %>" name="nodes[]" value="<%= node.id %>" class="w-4 h-4 text-primary-600 bg-dark-lighter border-gray-700 rounded focus:ring-primary-500 focus:ring-2">
                                        <label for="node_<%= node.id %>" class="ml-2 text-sm text-gray-300"><%= node.name %></label>
                                    </div>
                                <% }); %>
                            <% } else { %>
                                <p class="text-gray-400 text-sm">No nodes available</p>
                            <% } %>
                        </div>
                    </div>
                    
                    <div class="mb-6">
                        <label class="block text-sm font-medium text-gray-400 mb-3">Select Eggs</label>
                        <div class="grid grid-cols-2 sm:grid-cols-3 gap-3 max-h-40 overflow-y-auto p-2 bg-dark-lighter rounded-lg">
                            <% if (eggs && eggs.length > 0) { %>
                                <% eggs.forEach(egg => { %>
                                    <div class="flex items-center">
                                        <input type="checkbox" id="egg_<%= egg.id %>" name="eggs[]" value="<%= egg.id %>" class="w-4 h-4 text-primary-600 bg-dark-lighter border-gray-700 rounded focus:ring-primary-500 focus:ring-2">
                                        <label for="egg_<%= egg.id %>" class="ml-2 text-sm text-gray-300"><%= egg.name %></label>
                                    </div>
                                <% }); %>
                            <% } else { %>
                                <p class="text-gray-400 text-sm">No eggs available</p>
                            <% } %>
                        </div>
                    </div>
                    
                    <div class="flex items-center justify-end">
                        <button type="button" class="px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white rounded-lg transition-colors duration-200 mr-3" data-bs-dismiss="modal">
                            Cancel
                        </button>
                        <button type="submit" class="px-4 py-2 bg-primary-600 hover:bg-primary-700 text-white rounded-lg transition-colors duration-200">
                            Create Mount
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    
    <script>
        // Delete Mount Function
        function deleteMount(mountId) {
            if (confirm('Are you sure you want to delete this mount? This action cannot be undone.')) {
                window.location.href = `/admin/mounts/${mountId}/delete`;
            }
        }
        
        // Edit Mount Function
        function editMount(mountId) {
            window.location.href = `/admin/mounts/${mountId}/edit`;
        }
        
        // Modal Controls
        document.addEventListener('DOMContentLoaded', function() {
            const createMountBtn = document.querySelector('[data-bs-target="#createMountModal"]');
            const createMountModal = document.getElementById('createMountModal');
            const closeBtns = document.querySelectorAll('[data-bs-dismiss="modal"]');
            
            createMountBtn.addEventListener('click', function() {
                createMountModal.classList.remove('hidden');
                createMountModal.classList.add('flex');
            });
            
            closeBtns.forEach(btn => {
                btn.addEventListener('click', function() {
                    createMountModal.classList.add('hidden');
                    createMountModal.classList.remove('flex');
                });
            });
            
            // Close modal when clicking outside
            createMountModal.addEventListener('click', function(event) {
                if (event.target === createMountModal) {
                    createMountModal.classList.add('hidden');
                    createMountModal.classList.remove('flex');
                }
            });
        });
    </script>
</body>
</html> 